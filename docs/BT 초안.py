# =======================================================================
# 가능한 행동 리스트 (Action List) - 참조용
# =======================================================================
# 가능한 행동 리스트
# 1.	이동 (Movement)
# o   	    설명: 지정된 방향으로 캐릭터를 움직입니다. 지형을 탐색하거나, 적과의 거리를 조절하거나, 유리한 위치를 선점하는 데 사용됩니다. (예: 전진, 후퇴, 좌우 이동)
# o	        쿨타임: 없음 (기본적인 움직임으로 쿨타임 없이 자유롭게 사용 가능)
# 2.	일반 공격 (Basic Attack)
# o	        설명: 기본적인 빠르기의 단일 공격을 실행합니다. 연속으로 사용하여 콤보를 만들거나, 적의 짧은 빈틈을 노릴 때 주로 사용됩니다.
# o	        쿨타임: 2초 (빠른 반복 사용이 가능하도록 짧은 쿨타임을 가집니다.)
# 3.	회전베기 공격 (Spin Attack)
# o	        설명: 몸을 회전시키며 넓은 범위를 강력하게 공격합니다. 발동은 다소 느리지만 높은 피해를 주며, 다수의 적을 상대하거나 적이 큰 빈틈을 보일 때 효과적입니다.
# o	        쿨타임: 10초 (강력한 만큼 사용 후 재사용까지 비교적 긴 시간이 필요합니다.)
# 4.	발차기 공격 (Kick Attack)
# o	        설명: 전방으로 발차기를 하여 적에게 중간 정도의 피해를 주거나 균형을 잃게 만듭니다. 적을 밀어내어 거리를 확보하거나, 다른 공격과의 연계 기술로도 활용될 수 있습니다.
# o	        쿨타임: 5초 (일반 공격보다는 재사용 대기시간이 있지만, 강공격보다는 자주 사용할 수 있습니다.)
# 5.	방어하기 (Defend/Block)
# o	        설명: 적의 공격을 방어 자세를 취해 막아내어 받는 피해를 크게 줄이거나 완전히 무효화합니다. 방어 성공 시 특정 이점을 얻을 수도 있지만, 방어 중에는 다른 행동이 제한될 수 있습니다.
# o	        쿨타임: 2초 (방어 자세를 취하는 것에 대한 짧은 쿨타임 또는 방어 유지/해제에 따른 유동적인 적용 가능)
# 6.	회피 (Evade/Dodge)
# o	        설명: 지정된 4방향(전, 후, 좌, 우) 중 하나로 빠르게 몸을 날려 적의 공격을 피합니다. 사용 중 짧은 시간 동안 무적 상태가 될 수 있어 위기 상황 탈출에 유용합니다.
# o	        쿨타임: 10초 (생존에 중요한 기술인 만큼 신중한 사용이 요구됩니다.)
# 7.	Idle (대기 자세)
# o	        설명: 특별한 행동을 하지 않고 현재 위치에서 대기하며 주변을 경계하거나 다음 행동을 준비하는 기본 자세를 취합니다.
# o	        쿨타임: 없음 (별도의 행동이 아닌 상태)
# 8.	사망 (Death)
# o	        설명: 캐릭터의 체력이 0이 되어 모든 행동이 불가능한 상태가 됩니다.
# o	        쿨타임: 없음 (상태 변화)









# --- 에이전트 행동 결정 로직 ---
def 에이전트_행동_결정(에이전트_타입):
    # 공통 최상위 루트 (Selector)
    # 순차 (Sequence): 사망 처리
    if 자신의_체력_절대값() <= 0: # [cite: 1]
        사망() # [cite: 1]
        return # 사망 시 모든 행동 중지

    if 에이전트_타입 == "수비":
        수비_집중형_에이전트_행동()
    elif 에이전트_타입 == "공격":
        공격_집중형_에이전트_행동()
    else:
        Idle("알 수 없는 에이전트 타입")

# --- 1. 수비 집중형 에이전트 (BT 기반) ---
def 수비_집중형_에이전트_행동(): # [cite: 1]
    # 루트 (Selector): [공통 최상위 루트 하위]
    # 선택 (Selector): 최우선 생존 및 방어 행동 [cite: 1]
    if 적의_치명적_공격_감지() and 회피_쿨타임_완료() and 자신의_체력_비율() < 0.4: # [cite: 1]
        회피_4방향() # [cite: 1]
    elif 적의_공격_임박() and 방어_쿨타임_완료() and 적과의_거리() == "근접": # [cite: 1]
        방어하기() # [cite: 1, 2]
    elif 적이_일반_공격_시도_중() and 방어_쿨타임_완료() and (not 회피_쿨타임_완료() or True): # '회피가 부적절한 상황'은 True로 가정 [cite: 1]
        방어하기() # [cite: 1]
    # 선택 (Selector): 상황 대응 및 기회 창출 [cite: 1]
    elif 방어하기_성공_직후() and 적이_공격_후딜레이_상태(): # [cite: 1]
        # 선택 (Selector): 반격 수단 [cite: 1]
        if 반격용_공격_쿨타임_완료("일반"):
            일반_공격("빠른 반격") # [cite: 1]
            # (선택적) 순차 (Sequence): 추가 압박
            if 반격_성공_후_적이_취약_상태() and 주변_안전_확보(): # [cite: 3]
                if 공격_쿨타임_완료("회전베기"): # [cite: 3]
                    회전베기_공격("큰 빈틈 시, 추가 압박") # [cite: 3]
                elif 공격_쿨타임_완료("일반연타"): # [cite: 3]
                    일반_공격("연타, 추가 압박") # [cite: 3]
        elif 반격용_공격_쿨타임_완료("발차기"):
            발차기_공격("경직 유도") # [cite: 1]
            # (선택적) 순차 (Sequence): 추가 압박 (위와 동일 로직 적용 가능)
            if 반격_성공_후_적이_취약_상태() and 주변_안전_확보(): # [cite: 3]
                if 공격_쿨타임_완료("회전베기"): # [cite: 3]
                    회전베기_공격("큰 빈틈 시, 추가 압박") # [cite: 3]
                elif 공격_쿨타임_완료("일반연타"): # [cite: 3]
                    일반_공격("연타, 추가 압박") # [cite: 3]
    elif (적이_거리를_좁히려_함() or 자신이_불리한_위치()): # [cite: 1]
        # 선택 (Selector): 공간 확보 수단 [cite: 1]
        if 이동_관련_쿨타임_완료("발차기로_공간확보"):
            발차기_공격("적 밀어내기") # [cite: 1]
        elif 이동_관련_쿨타임_완료("이동으로_공간확보"):
            이동("안전한 위치로") # [cite: 1]
    elif 자신이_더_불리한_상황(): # [cite: 1]
        이동("후퇴 및 거리 유지") # [cite: 4]
    # 선택 (Selector): 제한적 공격 및 특수 행동 [cite: 4]
    elif 적이_매우_큰_빈틈_보임() and 공격_쿨타임_완료("회전베기") and 주변_안전_확보(): # [cite: 4]
        회전베기_공격() # [cite: 4]
    elif (적이_원거리에서_방심_중() or 추격_필요()) and 회피_연계_공격_쿨타임_완료(): # [cite: 4]
        회피_4방향("접근 방향으로") # [cite: 4]
        # 연계 공격 선택 (단순화를 위해 일반 공격 우선)
        if 공격_쿨타임_완료("일반"):
            일반_공격("연계") # [cite: 4]
        elif 공격_쿨타임_완료("발차기"):
            발차기_공격("연계") # [cite: 4]
    elif 적이_명백한_빈틈_보임() and 다른_주요_공격_스킬_쿨타임_중() and 주변_안전_확보() and 공격_쿨타임_완료("일반"): # [cite: 5]
        일반_공격() # [cite: 5]
    # 선택 (Selector): 위치 선정 및 자세 유지 [cite: 5]
    elif (자신의_체력_비율() < 0.5 and 적과의_거리() != "근접") or 지형적으로_유리한_위치_발견(): # [cite: 5]
        이동("위치 변경") # [cite: 5]
    elif 특별한_행동을_하지_않을_때(): # [cite: 5]
        Idle("기본 대기 자세, 적 주시") # [cite: 5]
    else:
        Idle("수비형: 마땅한 행동 없음, 대기") # 모든 조건 불충족 시

# --- 2. 공격 집중형 에이전트 (BT 기반) ---
def 공격_집중형_에이전트_행동(): # [cite: 5]
    # 루트 (Selector): [공통 최상위 루트 하위]
    # 선택 (Selector): 적극적인 공격 실행 [cite: 5]
    if (적이_강력한_스킬_후_긴_후딜() or 적이_넘어진_상태()) and 공격_쿨타임_완료("회전베기"): # [cite: 6]
        회전베기_공격() # [cite: 6]
    elif (적이_원거리_견제_중() or 거리를_빠르게_좁혀야_할_때()) and 회피_연계_공격_쿨타임_완료(): # [cite: 6]
        회피_4방향("접근 방향으로") # [cite: 6]
        # 선택 (Selector): 연계 공격 [cite: 6]
        if 공격_쿨타임_완료("회전베기") and 적이_매우_큰_빈틈_보임(): # "접근 후 적이 큰 빈틈 지속 시" 조건 추가 [cite: 6]
             회전베기_공격("연계") # [cite: 6]
        elif 공격_쿨타임_완료("발차기"):
            발차기_공격("연계") # [cite: 6]
        elif 공격_쿨타임_완료("일반"):
            일반_공격("연계") # [cite: 6]
    elif 이전_공격_명중_후_적이_경직_상태() and 적과의_거리() == "근접": # [cite: 7]
        # 선택 (Selector): 연속 공격 수단 [cite: 7]
        if 공격_쿨타임_완료("회전베기"): # "경직이 길거나 추가타 확정 시"는 회전베기 우선으로 단순화 [cite: 7]
            회전베기_공격() # [cite: 7]
        elif 공격_쿨타임_완료("일반연타"):
            일반_공격("2~3회 연타") # [cite: 7]
    elif 적과의_거리() == "유효 사거리 내" and 공격_쿨타임_완료("일반") and 적이_명확한_방어_자세_아님(): # [cite: 7]
        일반_공격() # [cite: 7]
    # 선택 (Selector): 상황에 따른 보조 행동 (공격 우선) [cite: 7]
    elif 어쩔_수_없이_방어_성공_후_적_빈틈(): # [cite: 7]
        # 선택 (Selector): 반격 수단 [cite: 7]
        if 반격용_공격_쿨타임_완료("발차기"):
            발차기_공격("경직 유도") # [cite: 7]
        elif 반격용_공격_쿨타임_완료("일반"):
            일반_공격("빠른 반격") # [cite: 7]
    elif (너무_근접하여_공격_연계_어려움() or 포위_위험()): # [cite: 8]
        # 선택 (Selector): 공간 확보 수단 [cite: 8]
        if 이동_관련_쿨타임_완료("발차기로_공간확보"):
            발차기_공격() # [cite: 8]
        elif 이동_관련_쿨타임_완료("이동으로_공간확보"):
            이동("거리 벌리기") # [cite: 8]
    elif 피할_수_없는_위협적_공격_감지() and 회피_쿨타임_완료(): # [cite: 8]
        회피_4방향() # [cite: 8]
    # 선택 (Selector): 전략적 이동 및 긴급 방어 [cite: 8]
    elif 적이_강력한_근접_공격_위주() or 자신의_주력기가_특정_거리에_유리() or 공격_각도_조절_필요(): # [cite: 8]
        이동("최적의 공격 거리 유지 또는 위치 선점") # [cite: 9]
    elif (자신의_체력_비율() < 0.3 or 주요_스킬_쿨타임_확보_필요()): # 자신의 체력이 매우 낮은 경우(예: 30% 미만) [cite: 9]
        이동("후퇴 및 거리 유지") # [cite: 9]
    elif 회피_불가능_또는_쿨타임_중인_치명적_공격_임박() and 방어_쿨타임_완료(): # [cite: 9]
        방어하기() # [cite: 9]
    # 선택 (Selector): 위치 변경 및 자세 유지 [cite: 9]
    elif 자신의_체력_비율() < 0.3 and 안전하게_이동_가능한_유리한_지형_아이템_발견(): # [cite: 9]
        이동("위치 변경") # [cite: 9]
    elif 특별한_행동을_하지_않을_때(): # [cite: 10]
        Idle("기본 대기 자세, 공격 기회 탐색") # [cite: 10]
    else:
        Idle("공격형: 마땅한 행동 없음, 대기") # 모든 조건 불충족 시